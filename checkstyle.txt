Starting audit...
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\Actor.java:21:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\Actor.java:25:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\Actor.java:25:25: Parameter name should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\Actor.java:29:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\Actor.java:33:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\Actor.java:33:38: Parameter careerDescription should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\Actor.java:37:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\Actor.java:41:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\Actor.java:41:32: Parameter filmography should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\Actor.java:45:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\Actor.java:49:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\Actor.java:49:27: Parameter awards should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\NumberOfRatings.java:4:8: Unused import - entertainment.Query. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\NumberOfRatings.java:8:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\NumberOfRatings.java:17:5: Class 'NumberOfRatings' looks like designed for extension (can be subclassed), but the method 'mysort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NumberOfRatings' final or making the method 'mysort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\NumberOfRatings.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\NumberOfRatings.java:17:52: Parameter map should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\NumberOfRatings.java:17:78: Parameter sortType should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\NumberOfRatings.java:40:5: Class 'NumberOfRatings' looks like designed for extension (can be subclassed), but the method 'applyQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NumberOfRatings' final or making the method 'applyQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\NumberOfRatings.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\NumberOfRatings.java:46:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\NumberOfRatings.java:58:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\NumberOfRatings.java:60:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\actor\NumberOfRatings.java:67: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:16:5: Class 'AverageActor' looks like designed for extension (can be subclassed), but the method 'getRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AverageActor' final or making the method 'getRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:23:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:25:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:35:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:38:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:40:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:47:5: Class 'AverageActor' looks like designed for extension (can be subclassed), but the method 'mysortDouble' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AverageActor' final or making the method 'mysortDouble' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:47:57: Parameter map should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:47:82: Parameter sortType should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:69:5: Class 'AverageActor' looks like designed for extension (can be subclassed), but the method 'applyQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AverageActor' final or making the method 'applyQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:90: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:99:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AverageActor.java:101:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:24:5: Class 'AwardsActor' looks like designed for extension (can be subclassed), but the method 'getNumberOfAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AwardsActor' final or making the method 'getNumberOfAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:24:34: Parameter actor should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:28:5: Class 'AwardsActor' looks like designed for extension (can be subclassed), but the method 'checkAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AwardsActor' final or making the method 'checkAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:29:13: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:46:5: Class 'AwardsActor' looks like designed for extension (can be subclassed), but the method 'mysort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AwardsActor' final or making the method 'mysort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:46:52: Parameter map should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:46:78: Parameter sortType should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:68:5: Class 'AwardsActor' looks like designed for extension (can be subclassed), but the method 'applyQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AwardsActor' final or making the method 'applyQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:84:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\AwardsActor.java:86:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\BestUnseenRecommendation.java:3:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\BestUnseenRecommendation.java:10:5: Class 'BestUnseenRecommendation' looks like designed for extension (can be subclassed), but the method 'applyRecommendation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BestUnseenRecommendation' final or making the method 'applyRecommendation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\BestUnseenRecommendation.java:13:13: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Command.java:3:8: Unused import - fileio.Writer. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Command.java:4:8: Unused import - net.sf.json.JSONArray. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Command.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Command.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Command.java:19:41: Parameter type should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Command.java:19:54: Parameter username should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Command.java:20:40: Parameter title should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Command.java:20:54: Parameter grade should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Command.java:20:68: Parameter seasonNumber should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Command.java:33:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Command.java:37:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Command.java:41:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:4:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:9:1: Class Database should be declared as final. [FinalClass]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:17:24: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:17:25: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:42:32: Parameter name should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:44:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:50:34: Parameter name should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:52:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:58:36: Parameter name should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:60:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:66:32: Parameter name should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:66:45: Parameter rating should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:74:33: Parameter name should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:74:46: Parameter rating should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:74:61: Parameter seasonNumber should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:83:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:83:32: Parameter inputActors should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:92:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:92:31: Parameter inputUsers should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:101:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:101:32: Parameter inputMovies should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:104: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:110:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Database.java:110:33: Parameter inputSerials should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Favorite.java:3:8: Unused import - fileio.Writer. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Favorite.java:4:8: Unused import - net.sf.json.JSONArray. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Favorite.java:12:5: Class 'Favorite' looks like designed for extension (can be subclassed), but the method 'applyCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Favorite' final or making the method 'applyCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteRecommendation.java:11:5: Class 'FavoriteRecommendation' looks like designed for extension (can be subclassed), but the method 'getFavoriteMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FavoriteRecommendation' final or making the method 'getFavoriteMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteRecommendation.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteRecommendation.java:11:51: Parameter user should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteRecommendation.java:17:79: '&&' should be on a new line. [OperatorWrap]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteRecommendation.java:33:80: '&&' should be on a new line. [OperatorWrap]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteRecommendation.java:62:5: Class 'FavoriteRecommendation' looks like designed for extension (can be subclassed), but the method 'applyRecommendation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FavoriteRecommendation' final or making the method 'applyRecommendation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:11: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:15:5: Class 'FavoriteVideo' looks like designed for extension (can be subclassed), but the method 'isInFavorite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FavoriteVideo' final or making the method 'isInFavorite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:15:33: Parameter name should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:17:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:24:5: Class 'FavoriteVideo' looks like designed for extension (can be subclassed), but the method 'getNumberOfAppearances' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FavoriteVideo' final or making the method 'getNumberOfAppearances' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:24:39: Parameter videoName should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:34:5: Class 'FavoriteVideo' looks like designed for extension (can be subclassed), but the method 'applyQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FavoriteVideo' final or making the method 'applyQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:44:45: '!=' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:45:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:47:25: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:48: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:58:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:58:25: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:60:25: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:61: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:75:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FavoriteVideo.java:77:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:5:8: Unused import - java.nio.file.Path. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:6:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:7:8: Unused import - java.util.regex.Pattern. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:20:5: Class 'FilterDescriptionActors' looks like designed for extension (can be subclassed), but the method 'filterActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterDescriptionActors' final or making the method 'filterActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:26: Line is longer than 100 characters (found 161). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:42:5: Class 'FilterDescriptionActors' looks like designed for extension (can be subclassed), but the method 'mysort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterDescriptionActors' final or making the method 'mysort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:42:52: Parameter map should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:42:78: Parameter sortType should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:64:5: Class 'FilterDescriptionActors' looks like designed for extension (can be subclassed), but the method 'applyQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterDescriptionActors' final or making the method 'applyQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:79:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:81:13: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:90:5: Class 'FilterDescriptionActors' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterDescriptionActors' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:94:5: Class 'FilterDescriptionActors' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterDescriptionActors' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\FilterDescriptionActors.java:94:28: Parameter filters should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\LongestVideo.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\LongestVideo.java:15:5: Class 'LongestVideo' looks like designed for extension (can be subclassed), but the method 'applyQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LongestVideo' final or making the method 'applyQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\LongestVideo.java:22:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\LongestVideo.java:33:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\LongestVideo.java:47:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\LongestVideo.java:49:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:10: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:14:5: Class 'MostViewedVideo' looks like designed for extension (can be subclassed), but the method 'getNumberOfViews' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MostViewedVideo' final or making the method 'getNumberOfViews' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:14:33: Parameter name should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:17:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:24:5: Class 'MostViewedVideo' looks like designed for extension (can be subclassed), but the method 'applyQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MostViewedVideo' final or making the method 'applyQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:30:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:31:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:36:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:37:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:51:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\MostViewedVideo.java:53:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Movie.java:20:29: Parameter duration should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Movie.java:28:28: Parameter ratings should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:3:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:11:5: Class 'PopularRecommendation' looks like designed for extension (can be subclassed), but the method 'mysort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PopularRecommendation' final or making the method 'mysort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:11:52: Parameter map should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:18:5: Class 'PopularRecommendation' looks like designed for extension (can be subclassed), but the method 'getPopularGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PopularRecommendation' final or making the method 'getPopularGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:19:13: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:34:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:45:5: Class 'PopularRecommendation' looks like designed for extension (can be subclassed), but the method 'getSearchedVideo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PopularRecommendation' final or making the method 'getSearchedVideo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:45:36: Parameter sortedGenres should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:45:83: Parameter user should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:50:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:66:5: Class 'PopularRecommendation' looks like designed for extension (can be subclassed), but the method 'applyRecommendation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PopularRecommendation' final or making the method 'applyRecommendation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\PopularRecommendation.java:76:17: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:21:5: Class 'Query' looks like designed for extension (can be subclassed), but the method 'getObjectType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'getObjectType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:25:5: Class 'Query' looks like designed for extension (can be subclassed), but the method 'getSortType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'getSortType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:29:5: Class 'Query' looks like designed for extension (can be subclassed), but the method 'getCriteria' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'getCriteria' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:33:5: Class 'Query' looks like designed for extension (can be subclassed), but the method 'getNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'getNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:37:5: Class 'Query' looks like designed for extension (can be subclassed), but the method 'setObjectType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'setObjectType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:37:31: Parameter objectType should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:41:5: Class 'Query' looks like designed for extension (can be subclassed), but the method 'setSortType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'setSortType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:41:29: Parameter sortType should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:45:5: Class 'Query' looks like designed for extension (can be subclassed), but the method 'setCriteria' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'setCriteria' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:45:29: Parameter criteria should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:49:5: Class 'Query' looks like designed for extension (can be subclassed), but the method 'setNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'setNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Query.java:49:27: Parameter number should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryActor.java:3:8: Unused import - java.util.List. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryActor.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryUser.java:5:22: Parameter objectType should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryUser.java:5:41: Parameter sortType should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryUser.java:5:58: Parameter criteria should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryUser.java:5:75: Parameter number should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryUser.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:16: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:28: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:33: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:52:5: Class 'QueryVideo' looks like designed for extension (can be subclassed), but the method 'fitsFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'QueryVideo' final or making the method 'fitsFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:52:32: Parameter year should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:52:42: Parameter genres should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:53:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:53:74: '&&' should be on a new line. [OperatorWrap]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:60:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:65:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:68:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:71:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:72:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:77:5: Class 'QueryVideo' looks like designed for extension (can be subclassed), but the method 'mysort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'QueryVideo' final or making the method 'mysort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:77:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:77:52: Parameter map should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:77:78: Parameter sortType should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:99:5: Class 'QueryVideo' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'QueryVideo' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:103:5: Class 'QueryVideo' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'QueryVideo' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\QueryVideo.java:103:28: Parameter filters should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Rating.java:15:5: Class 'Rating' looks like designed for extension (can be subclassed), but the method 'applyCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rating' final or making the method 'applyCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Rating.java:31: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Rating.java:44: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\RatingVideo.java:16:5: Class 'RatingVideo' looks like designed for extension (can be subclassed), but the method 'mysortDouble' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RatingVideo' final or making the method 'mysortDouble' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\RatingVideo.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\RatingVideo.java:16:57: Parameter map should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\RatingVideo.java:16:82: Parameter sortType should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\RatingVideo.java:38:5: Class 'RatingVideo' looks like designed for extension (can be subclassed), but the method 'applyQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RatingVideo' final or making the method 'applyQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\RatingVideo.java:49:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\RatingVideo.java:51:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\RatingVideo.java:64:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\RatingVideo.java:67:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\RatingVideo.java:69:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\RatingVideo.java:84:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\RatingVideo.java:86:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:14:5: Class 'Recommandation' looks like designed for extension (can be subclassed), but the method 'calculateMovieRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommandation' final or making the method 'calculateMovieRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:14:40: Parameter movie should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:28:5: Class 'Recommandation' looks like designed for extension (can be subclassed), but the method 'calculateSerialRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommandation' final or making the method 'calculateSerialRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:28:41: Parameter serial should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:35:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:38:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:44:5: Class 'Recommandation' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommandation' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:48:5: Class 'Recommandation' looks like designed for extension (can be subclassed), but the method 'getTargetUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommandation' final or making the method 'getTargetUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:52:5: Class 'Recommandation' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommandation' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:52:25: Parameter type should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:56:5: Class 'Recommandation' looks like designed for extension (can be subclassed), but the method 'setTargetUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommandation' final or making the method 'setTargetUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Recommandation.java:56:31: Parameter targetUser should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:17:5: Class 'SearchRecommendation' looks like designed for extension (can be subclassed), but the method 'getNonViewed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchRecommendation' final or making the method 'getNonViewed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:17:45: Parameter genre should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:17:52: 'genre' hides a field. [HiddenField]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:17:59: Parameter user should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:39:5: Class 'SearchRecommendation' looks like designed for extension (can be subclassed), but the method 'mysort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchRecommendation' final or making the method 'mysort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:39:51: Parameter map should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:44:15: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:50:5: Class 'SearchRecommendation' looks like designed for extension (can be subclassed), but the method 'applyRecommendation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchRecommendation' final or making the method 'applyRecommendation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:67:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:69:21: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:70: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:77:5: Class 'SearchRecommendation' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchRecommendation' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:81:5: Class 'SearchRecommendation' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchRecommendation' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\SearchRecommendation.java:81:26: Parameter genre should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Serial.java:24:36: Parameter numberOfSeasons should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Serial.java:32:25: Parameter cast should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Serial.java:40:28: Parameter seasons should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Show.java:16:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Show.java:20:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'setTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'setTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Show.java:20:26: Parameter title should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Show.java:24:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Show.java:28:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Show.java:28:25: Parameter year should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Show.java:32:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Show.java:36:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\Show.java:36:27: Parameter genres should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\StandardRecommendation.java:8:5: Class 'StandardRecommendation' looks like designed for extension (can be subclassed), but the method 'applyRecommendation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StandardRecommendation' final or making the method 'applyRecommendation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\StandardRecommendation.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:14:38: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:32:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:32:33: '{' at column 33 should have line break after. [LeftCurly]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:32:33: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:32:34: 'return' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:32:49: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:32:50: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:34:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:34:29: Parameter username should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:34:46: '{' at column 46 should have line break after. [LeftCurly]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:34:72: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:34:73: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:36:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSubscriptionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSubscriptionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:40:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setSubscriptionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setSubscriptionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:40:37: Parameter subscriptionType should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:44:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:48:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:48:28: Parameter history should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:52:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getFavoriteMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getFavoriteMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:56:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setFavoriteMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setFavoriteMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:56:35: Parameter favoriteMovies should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:60:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:60:47: '{' at column 47 should have line break after. [LeftCurly]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:62:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:62:32: Parameter ratedMovies should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:62:63: '{' at column 63 should have line break after. [LeftCurly]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:64:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getRatedSerials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getRatedSerials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:64:48: '{' at column 48 should have line break after. [LeftCurly]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:66: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:66:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setRatedSerials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setRatedSerials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:66:33: Parameter ratedSerials should be final. [FinalParameters]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\User.java:66:65: '{' at column 65 should have line break after. [LeftCurly]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\View.java:8:5: Class 'View' looks like designed for extension (can be subclassed), but the method 'applyCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'View' final or making the method 'applyCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\entertainment\View.java:23: Line is longer than 100 characters (found 127). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:3:8: Unused import - actor.Actor. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:8:21: Using the '.*' form of import should be avoided - entertainment.*. [AvoidStarImport]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:16:8: Unused import - javax.xml.crypto.Data. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:22:8: Unused import - java.util.List. [UnusedImports]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:98: Line is longer than 100 characters (found 146). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:105: Line is longer than 100 characters (found 148). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:111: Line is longer than 100 characters (found 168). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:117: Line is longer than 100 characters (found 180). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:126: Line is longer than 100 characters (found 155). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:133: Line is longer than 100 characters (found 153). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:140: Line is longer than 100 characters (found 154). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:147: Line is longer than 100 characters (found 157). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:157: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:160: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:163: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:166: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] E:\Facultate\Anul2\POO\VideosDB\VideosDB\.\src\main\Main.java:169: Line is longer than 100 characters (found 121). [LineLength]
Audit done.
Checkstyle ends with 331 errors.
